---
description: CLI contract for pdf2foundry (Typer) â€” single-pass ingestion and caching
globs: src/pdf2foundry/cli.py
alwaysApply: false
---
# CLI Contract (Typer)

- Console script: `pdf2foundry`
- Package: `pdf2foundry`

## Command: convert

Usage:

```bash
pdf2foundry convert <pdf> [options]
```

### Required

- pdf (argument): Path to source PDF file (readable file)
- --mod-id <string>: Module ID (lowercase, hyphens, unique)
- --mod-title <string>: Module Title (display name)

### Optional metadata

- --author <string>
- --license <string>
- --pack-name <string> (default: <mod-id>-journals)

### Behavior flags (defaults)

- --toc/--no-toc (default: --toc)
- --tables <auto|image-only> (default: auto)
- --deterministic-ids/--no-deterministic-ids (default: --deterministic-ids)
- --out-dir <path> (default: dist)
- --compile-pack/--no-compile-pack (default: --no-compile-pack)

### Docling JSON cache (single-pass ingestion)

- --docling-json <path>: If the file exists and is valid, load the Docling document from JSON; otherwise convert and save to this path.
- --write-docling-json/--no-write-docling-json: When enabled without --docling-json, convert and write to the default path dist/<mod-id>/sources/docling.json.
- --fallback-on-json-failure/--no-fallback-on-json-failure: If loading from JSON fails, fall back to conversion (and overwrite when applicable).

Notes:

- When both --docling-json and --write-docling-json are provided, PATH semantics apply and the write flag is ignored.
- Deprecated flags --docling-json-load/--docling-json-save are removed and not supported.

## Behavior

- Single-pass ingestion: build or load one Docling document, then reuse it for:
  - Parse structure (bookmarks preferred; heuristic fallback)
  - Extract content as HTML; `text.format = 1`
- Deterministic IDs for entries/pages (SHA-1 strategy)
- Optional TOC entry with `@UUID[...]` links
- Emit sources and assets, then optionally compile LevelDB pack

## Output layout

```text
<out-dir>/<mod-id>/
  module.json
  assets/
  styles/pdf2foundry.css
  sources/
    journals/*.json
    docling.json        # when JSON cache is written
  packs/<pack-name>/
```

## Exit codes

- 0 on success; non-zero with clear message on failure

## Examples

```bash
# Basic conversion
pdf2foundry convert book.pdf --mod-id adc-v7 --mod-title "Adventure" --out-dir dist

# Convert and cache Docling JSON (path semantics)
pdf2foundry convert book.pdf --mod-id adc-v7 --mod-title "Adventure" --docling-json dist/adc-v7/sources/docling.json

# Write JSON to default cache path
pdf2foundry convert book.pdf --mod-id adc-v7 --mod-title "Adventure" --write-docling-json
```

See: [PRD.md](mdc:docs/PRD.md), [architecture_and_flow.md](mdc:docs/architecture_and_flow.md)
